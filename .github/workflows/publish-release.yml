# 1. Update changelog
# 2. Upload a Python Package using Twine

name: Release fosslight_binary

on:
  release:
    types: [published]

jobs:
  update-changelog:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: update changelog with gren
      env:
        GREN_GITHUB_TOKEN: ${{ secrets.TOKEN }}
      run: |
        npm install github-release-notes@0.17.3
        node_modules/.bin/gren changelog --override
    - name: Commit files
      run: |
        git config --local user.name "github-actions[bot]"
        git add CHANGELOG.md
        git commit -m "Update ChangeLog"
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.TOKEN }}
        branch: main

  build:
    name: Build packages
    needs: update-changelog
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-18.04
            TARGET: ubuntu
            CMD_BUILD: >
                pyinstaller --onefile cli.py -n cli &&
                mv dist/cli fosslight_bin_ubuntu18
            OUT_FILE_NAME: fosslight_bin_ubuntu18
            ASSET_MIME: application/octet-stream
          - os: macos-latest
            TARGET: macos
            CMD_BUILD: >
                pyinstaller --onefile cli.py -n cli &&
                mv dist/cli fosslight_bin_macos
            OUT_FILE_NAME: fosslight_bin_macos
            ASSET_MIME: aapplication/x-mach-binary
          - os: windows-latest
            TARGET: windows
            CMD_BUILD: >
                pyinstaller --onefile cli.py -n cli &&
                move dist/cli.exe fosslight_bin_windows.exe
            OUT_FILE_NAME: fosslight_bin_windows.exe
            ASSET_MIME: application/vnd.microsoft.portable-executable
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.6
      uses: actions/setup-python@v2
      with:
        python-version: 3.6
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .
        pip install pyinstaller
    - name: Build with pyinstaller for ${{matrix.TARGET}}
      run: ${{matrix.CMD_BUILD}}
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./${{ matrix.OUT_FILE_NAME}}
        asset_name: ${{ matrix.OUT_FILE_NAME}}
        asset_content_type: ${{ matrix.ASSET_MIME}}
  deploy:
    runs-on: ubuntu-18.04
    needs: update-changelog
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.7'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload --repository testpypi dist/*
    - name: Upload Release 3rd Party License text
      id: upload-release-license
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./LICENSES/3rd_party_licenses.txt
        asset_name: 3rd_party_licenses.txt
        asset_content_type: text/plain