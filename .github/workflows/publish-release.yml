# 1. Update changelog
# 2. Upload a Python Package using Twine

name: Release fosslight_binary

on:
  release:
    types: [published]

jobs:
  update-changelog:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: update changelog with gren
      env:
        GREN_GITHUB_TOKEN: ${{ secrets.TOKEN }}
      run: |
        npm install github-release-notes@0.17.3
        node_modules/.bin/gren changelog --override
    - name: Commit files
      run: |
        git config --local user.name "github-actions[bot]"
        git add CHANGELOG.md
        git commit -m "Update ChangeLog"
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.TOKEN }}
        branch: main

  build:
    name: Build packages
    needs: update-changelog
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-18.04
            TARGET: ubuntu
            CMD_BUILD: >
                pyinstaller --onefile cli.py --hidden-import cmath &&
                cd dist/ &&
                zip -r9 clipster clipster.app/
            OUT_FILE_NAME: clipster.zip
            ASSET_MIME: application/zip
          - os: macos-latest
            TARGET: macos
            CMD_BUILD: >
                pyinstaller --onefile cli.py --hidden-import cmath &&
                cd dist/ &&
                zip -r9 clipster clipster.app/
            OUT_FILE_NAME: clipster.zip
            ASSET_MIME: application/zip
          - os: windows-latest
            TARGET: windows
            CMD_BUILD: pyinstaller --onefile cli.py --hidden-import cmath
            OUT_FILE_NAME: clipster.exe
            ASSET_MIME: application/vnd.microsoft.portable-executable
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Build with pyinstaller for ${{matrix.TARGET}}
      run: ${{matrix.CMD_BUILD}}
    - name: Load Release URL File from release job
      uses: actions/download-artifact@v2
      with:
        name: release_url

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./${{ matrix.OUT_FILE_NAME}}
        asset_name: ${{ matrix.OUT_FILE_NAME}}
        asset_content_type: ${{ matrix.ASSET_MIME}}

   build:
    needs: update-changelog
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.7'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: PyInstaller Windows
      uses: JackMcKew/pyinstaller-action-windows@main
      with:
        path: ./
        
    - name : Zip release file
      run: zip -rj ./fosslight_dependency_windows.zip dist/windows/fosslight_dependency.exe ./LICENSES/3rd_party_licenses.txt ./LICENSE
                
    - name: Upload release file
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./fosslight_dependency_windows.zip
        asset_name: fosslight_dependency_windows.zip
        asset_content_type: application/zip
